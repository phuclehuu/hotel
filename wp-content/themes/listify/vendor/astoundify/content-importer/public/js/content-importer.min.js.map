{"version":3,"sources":["content-importer.js"],"names":["$","wp","$window","window","Astoundify_ContentImporter","importRunning","$div","beforeUnload","stageImport","groups","_","each","items","type","total","length","hide","typeElement","addClass","text","runIterateImport","iterate_action","html","dfd","Deferred","resolve","filteredItems","group","push","item","reject","then","runImport","ajax","url","ajaxurl","data","action","dataType","success","responses","response","i","parseInt","processed","show","prepend","removeClass","all_done","val","this","find","error","XMLHttpRequest","textStatus","errorThrown","console","log","element","bind","jQuery","document","ready","on","e","preventDefault","$button","security","astoundifyContentImporter","nonces","stage","page","files","astoundifyContentImporterFiles","pack","slideDown"],"mappings":"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","file":"content-importer.min.js","sourcesContent":["/**\n * Functions for ajaxified content importing inside the WordPress admin.\n *\n * @version 1.0.0\n *\n * @package Astoundify_ContentImporter\n */\n\n/**\n * @param {jQuery} $ jQuery object.\n * @param {object} wp WP object.\n */\n(function( $, wp ) {\n\tvar $window = $( window );\n\n\t/**\n\t * The Astoundify_ContentImporter object.\n\t *\n\t * @since 1.0.0\n\t * @type {object}\n\t */\n\tvar Astoundify_ContentImporter = Astoundify_ContentImporter || {};\n\n\t/**\n\t * Whether an import is currently processing.\n\t *\n\t * @since 1.0.0\n\t * @type {bool}\n\t */\n\tAstoundify_ContentImporter.importRunning = false;\n\n\t/**\n\t * The form that triggers an import process.\n\t *\n\t * @todo Make this dynamic\n\t *\n\t * @since 1.0.0\n\t * @type {bool}\n\t */\n\tAstoundify_ContentImporter.$div = $( '#astoundify-ci' );\n\n\t/**\n\t * Warn users they will cancel the import if they leave the page.\n\t *\n\t * @todo This string should be translatable.\n\t */\n\tAstoundify_ContentImporter.beforeUnload = function() {\n\t\tif ( Astoundify_ContentImporter.importRunning ) {\n\t\t\treturn 'Please do not leave while an import is in progress.';\n\t\t}\n\t};\n\n\t/**\n\t * Stage an import process.\n\t *\n\t * @todo Make DOM traverssing more dynamic.\n\t *\n\t * - Hides any import groups that do not have any items\n\t * - Adds an active spinner to groups that need processing\n\t * - Resets the initial processed count to 0\n\t * - Resets the total count to the new value\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param {Array} groups\n\t */\n\tAstoundify_ContentImporter.stageImport = function( groups ) {\n\t\t_.each( groups, function(items, type) {\n\t\t\tvar total = items.length;\n\n\t\t\tif ( 0 === total ) {\n\t\t\t\t$( '#import-type-' + type ).hide();\n\t\t\t} else {\n\t\t\t\tAstoundify_ContentImporter.typeElement( type, 'spinner' ).addClass( 'is-active' );\n\t\t\t\tAstoundify_ContentImporter.typeElement( type, 'processed' ).text(0);\n\t\t\t\tAstoundify_ContentImporter.typeElement( type, 'total' ).text(total);\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Iterate import process.\n\t *\n\t * @todo Make DOM traverssing more dynamic.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param {Array} items\n\t * @param {string} iterate_action Only one of two \"import\" or \"reset\"\n\t */\n\tAstoundify_ContentImporter.runIterateImport = function( groups, iterate_action ) {\n\n\t\t// Reset error + status.\n\t\t$( '#import-status' ).html( '' );\n\t\t$( '#import-errors' ).html( '' );\n\n\t\t// Notify that an import is running\n\t\tAstoundify_ContentImporter.importRunning = true;\n\n\t\tvar dfd = $.Deferred().resolve();\n\t\tvar filteredItems = [];\n\n\t\t// Split out object types to single iteration items.\n\t\t_.each( groups, function( group, type ) {\n\t\t\tif ( 'object' !== type ) {\n\t\t\t\tfilteredItems.push( group );\n\t\t\t} else {\n\t\t\t\t_.each( group, function( item ) {\n\t\t\t\t\tfilteredItems.push([item]);\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Remove any empty items.\n\t\tfilteredItems = _.reject( filteredItems, function( items ) {\n\t\t\treturn items.length === 0;\n\t\t} );\n\n\n\t\t// Iterate sorted items.\n\t\t_.each( filteredItems, function( items ) {\n\t\t\tdfd = dfd.then( function() {\n\t\t\t\treturn Astoundify_ContentImporter.runImport( items, iterate_action );\n\t\t\t} );\n\t\t});\n\n\t};\n\n\t/**\n\t * Import process.\n\t *\n\t * @since 2.0.0\n\t */\n\tAstoundify_ContentImporter.runImport = function( items, iterate_action ) {\n\t\treturn $.ajax( {\n\t\t\ttype: 'POST',\n\t\t\turl: ajaxurl,\n\t\t\tdata: {\n\t\t\t\taction: 'astoundify_ci_iterate_item',\n\t\t\t\titerate_action: iterate_action,\n\t\t\t\titems: items,\n\t\t\t},\n\t\t\tdataType: 'json',\n\t\t\tsuccess: function( responses ) {\n\t\t\t\tif ( false === responses.success ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Loop each item responses.\n\t\t\t\t_.each( responses, function( response, i ) {\n\n\t\t\t\t\tvar type = response.item.type;\n\t\t\t\t\tvar total = parseInt( Astoundify_ContentImporter.typeElement( type, 'total' ).text() );\n\t\t\t\t\tvar processed = parseInt( Astoundify_ContentImporter.typeElement( type, 'processed' ).text() );\n\n\t\t\t\t\t// Add processed:\n\t\t\t\t\tAstoundify_ContentImporter.typeElement( type, 'processed' ).text( processed + 1 );\n\t\t\t\t\tprocessed = parseInt( Astoundify_ContentImporter.typeElement( type, 'processed' ).text() ); // Reset processed.\n\n\t\t\t\t\t// Log error.\n\t\t\t\t\tif ( response.success === false ) {\n\t\t\t\t\t\t$( '#import-errors' ).show().prepend( '<li>' + response.data + '</li>' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove spinner when done.\n\t\t\t\t\tif ( processed === total ) {\n\t\t\t\t\t\tAstoundify_ContentImporter.typeElement( type, 'spinner' ).removeClass( 'is-active' );\n\n\t\t\t\t\t\t// Done?\n\t\t\t\t\t\tvar all_done = true;\n\n\t\t\t\t\t\t$( '.import-type' ).each( function( i, val ) {\n\t\t\t\t\t\t\tvar processed = parseInt( $( this ).find( '.processed-count' ).text() );\n\t\t\t\t\t\t\tvar total = parseInt( $( this ).find( '.total-count' ).text() );\n\n\t\t\t\t\t\t\tif ( processed !== total ) {\n\t\t\t\t\t\t\t\tall_done = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif ( true === all_done ) {\n\t\t\t\t\t\t\tAstoundify_ContentImporter.importRunning = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t},\n\t\t\terror: function( XMLHttpRequest, textStatus, errorThrown ) { \n\t\t\t\tif ( window.console ) {\n\t\t\t\t\tconsole.log( textStatus + ': ' + errorThrown );\n\t\t\t\t}\n\t\t\t},\n\t\t} );\n\t};\n\n\t/**\n\t * Get an import group type element.\n\t *\n\t * @since 1.0.0\n\t * \n\t * @param {string} type\n\t * @param {string} element\n\t */\n\tAstoundify_ContentImporter.typeElement = function( type, element ) {\n\t\treturn $( '#' + type + '-' + element );\n\t};\n\n\t/**\n\t * Alert users before leaving the page\n\t *\n\t * @since 1.0.0\n\t */\n\t$window.bind( 'beforeunload', Astoundify_ContentImporter.beforeUnload );\n\n\t/**\n\t * Bind actions to DOM\n\t *\n\t * @since 1.0.0\n\t */\n\tjQuery(document).ready(function($) {\n\n\t\t/**\n\t\t * When a processing action buttin is clicked perform an action.\n\t\t *\n\t\t * @since 1.0.0\n\t\t */\n\t\tAstoundify_ContentImporter.$div.find( 'a.button-import' ).on( 'click', function(e) {\n\t\t\te.preventDefault();\n\n\t\t\tvar $button = $(this);\n\n\t\t\treturn $.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: ajaxurl, \n\t\t\t\tdata: {\n\t\t\t\t\taction: 'astoundify_ci',\n\t\t\t\t\tsecurity: astoundifyContentImporter.nonces.stage,\n\t\t\t\t\tpage: astoundifyContentImporter.page,\n\t\t\t\t\tfiles: astoundifyContentImporterFiles,\n\t\t\t\t\tpack: $( 'input[name=astoundify_ci_pack]' ).val(),\n\t\t\t\t},\n\t\t\t\tdataType: 'json',\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tif ( response.success ) {\n\t\t\t\t\t\t$( '#plugins-to-import' ).hide();\n\t\t\t\t\t\t$( '#import-summary' ).slideDown( \"slow\" );\n\n\t\t\t\t\t\tgroups = response.data.groups;\n\t\t\t\t\t\titems = response.data.items;\n\n\t\t\t\t\t\t// these should be callbacks\n\t\t\t\t\t\tAstoundify_ContentImporter.stageImport( groups );\n\t\t\t\t\t\tAstoundify_ContentImporter.runIterateImport( groups, $button.data( 'action' ) );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$( '#plugins-to-import' ).hide();\n\t\t\t\t\t\t$( '#import-errors' ).show().html( '<li>' + response.data + '</li>' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n\n})( jQuery, window.wp );\n"]}